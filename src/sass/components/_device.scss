/**
 * Define the device styles.
 */

.config-wrapper {
  height: 100vh;
  min-width: 1550px;
  overflow-x: scroll;
  background: #1B1B1B;
  background-image: radial-gradient(48% 160%, #4E4E4E 60%, #232424 100%);
  padding: 30px 30px 20px;
  -webkit-font-smoothing: antialiased;
}

.config-title {
  padding-bottom: 30px;
  color: $white;
  letter-spacing: 1px;
  font-family: $sans;
  font-size: 1.8rem; // 18px
  font-weight: 700;
}

.device-title {
  text-align: center;
  font-size: 3.2rem;
  color: #444;
}

.device {
  position: relative;
  margin: 0 auto;
  display: inline-block;
  vertical-align: top;
  margin: 0 3em 3em;
  text-align: center;
}

.device-controls {
  position: relative;
}

.device-image-wrapper {
  display: inline-block;
  position: relative;
}

.device__image {
  position: relative;
  height: 384px;
  width: auto;
  z-index: 1;

  @include min($xlarge) {
    height: 500px;
  }
}

// RESPONSIVE STYLING
// MATT, YOU CAN IGNORE THIS

// Set up our key variables and css variables.
$keyHeight: 36px;
$keyWidth: 36px;

$keyWidthLarge: 48px;

// Namespace of our base class.
$class-slug: key !default

// First Row Variables
$qwertyRowTop: 161px;
$qwertyRowLeft: 193 !default

$qwertyRowTopLarge: 208px;
$qwertyRowLeftLarge: 251 !default

&:root {
  --keyHeight: 36px;
  --keyWidth: 36px;

  @include min($xlarge) {
    --keyHeight: 48px;
    --keyWidth: 48px;
  }
}

// Base Key Styles
.key {
  position: absolute;
  width: var(--keyHeight);
  height: var(--keyWidth);
  display: block;
  border: 2px solid #f00;
  border-radius: 5px;
  z-index: 2;
  transition: border-color 75ms ease;
  cursor: pointer;

  @include min($xlarge) {
    border-color: blue;
  }

  &:hover {
    border-color: $white;
  }
}

// Main Keys
.key--1 {
  top: $qwertyRowTop;
  left: $qwertyRowLeft * 1px;

  @include min($xlarge) {
    top: $qwertyRowTopLarge;
    left: $qwertyRowLeftLarge * 1px;
  }
}

// Loop through the QWERTY keys.
@for $i from 2 through 13 {
  $qwertyRowLeft: ($qwertyRowLeft + $keyWidth + 6);
  $qwertyRowLeftLarge: (($qwertyRowLeftLarge + $keyWidthLarge) + 6.5);

  .#{$class-slug}--#{$i} {
    top: $qwertyRowTop;
    left: $qwertyRowLeft;

    @include min($xlarge) {
      top: $qwertyRowTopLarge;
      left: $qwertyRowLeftLarge;
    }
  
    // If it's the / key, its a bit wider.
    @if $i == 13 {
      width: 56px;

      @include min($xlarge) {
        width: 76px;
      }
    }
  }
}

